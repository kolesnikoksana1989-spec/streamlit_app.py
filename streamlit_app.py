import streamlit as st
import pandas as pd
import numpy as np
from sklearn.linear_model import LinearRegression
import matplotlib.pyplot as plt

st.set_page_config(page_title="–ü—Ä–æ–≥–Ω–æ–∑ –ø—Ä–æ–¥–∞–∂", layout="centered")

# —Å—Ç–∏–ª—å
st.markdown(
    "<style>body {background-color: white;} .stMetric {color: red;} "
    ".stSlider label, .stSelectbox label {color: #c40000;} .stButton>button {background-color:#c40000; color:white;} "
    "</style>", unsafe_allow_html=True)

st.title("üìä –ü—Ä–æ–≥–Ω–æ–∑ –ø—Ä–æ–¥–∞–∂ –ø–æ –±—é–¥–∂–µ—Ç—É –∏ —Å–µ–∑–æ–Ω—É")

df = pd.read_csv("data/ads_sales.csv", encoding="utf-8-sig")
season_map = {"–∑–∏–º–∞": 0, "–≤–µ—Å–Ω–∞": 1, "–ª–µ—Ç–æ": 2, "–æ—Å–µ–Ω—å": 3}
df["–°–µ–∑–æ–Ω_–∫–æ–¥"] = df["–°–µ–∑–æ–Ω"].map(season_map)

X = df[["–ë—é–¥–∂–µ—Ç_—Ä–µ–∫–ª–∞–º—ã", "–°–µ–∑–æ–Ω_–∫–æ–¥"]]
y = df["–ü—Ä–æ–¥–∞–∂–∏"]
model = LinearRegression().fit(X, y)

# –±–æ–∫–æ–≤–æ–µ –º–µ–Ω—é
st.sidebar.header("‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ–≥–Ω–æ–∑–∞")
budget = st.sidebar.slider("–ë—é–¥–∂–µ—Ç —Ä–µ–∫–ª–∞–º—ã (‚ÇΩ)", 5000, 40000, 20000, step=1000)
season = st.sidebar.selectbox("–°–µ–∑–æ–Ω", list(season_map.keys()))
weeks = st.sidebar.slider("–ü—Ä–æ–≥–Ω–æ–∑ –Ω–∞ (–Ω–µ–¥–µ–ª—å)", 1, 8, 4)

season_code = season_map[season]
base_pred = model.predict([[budget, season_code]])[0]

st.subheader("üí∞ –ü—Ä–æ–≥–Ω–æ–∑ –ø—Ä–æ–¥–∞–∂")
st.metric("–û–∂–∏–¥–∞–µ–º—ã–π –æ–±—ä—ë–º –ø—Ä–æ–¥–∞–∂", f"{base_pred:,.0f} ‚ÇΩ")

# –ø—Ä–æ–≥–Ω–æ–∑ –Ω–∞ –≤—ã–±—Ä–∞–Ω–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–µ–¥–µ–ª—å
future_weeks = np.arange(weeks)
trend = base_pred + (future_weeks * (budget / 5000) * 100)
future_dates = pd.date_range("2025-03-10", periods=weeks, freq="W-MON")
forecast_df = pd.DataFrame({"–î–∞—Ç–∞": future_dates, "–ü—Ä–æ–≥–Ω–æ–∑_–ø—Ä–æ–¥–∞–∂": trend})

# –≥—Ä–∞—Ñ–∏–∫
fig, ax = plt.subplots(figsize=(7,4))
for s, g in df.groupby("–°–µ–∑–æ–Ω"):
    ax.scatter(g["–ë—é–¥–∂–µ—Ç_—Ä–µ–∫–ª–∞–º—ã"], g["–ü—Ä–æ–¥–∞–∂–∏"], label=s)
x_range = np.linspace(df["–ë—é–¥–∂–µ—Ç_—Ä–µ–∫–ª–∞–º—ã"].min(), df["–ë—é–¥–∂–µ—Ç_—Ä–µ–∫–ª–∞–º—ã"].max(), 50)
y_pred = model.predict(np.column_stack([x_range, np.full_like(x_range, season_code)]))
ax.plot(x_range, y_pred, color="red", label=f"–ü—Ä–æ–≥–Ω–æ–∑ ({season})")
ax.set_xlabel("–ë—é–¥–∂–µ—Ç —Ä–µ–∫–ª–∞–º—ã, ‚ÇΩ")
ax.set_ylabel("–ü—Ä–æ–¥–∞–∂–∏, ‚ÇΩ")
ax.legend()
ax.grid(True)
st.pyplot(fig)

st.subheader("üìÖ –ü—Ä–æ–≥–Ω–æ–∑ –ø—Ä–æ–¥–∞–∂ –Ω–∞ –±–ª–∏–∂–∞–π—à–∏–µ –Ω–µ–¥–µ–ª–∏")
st.line_chart(forecast_df.set_index("–î–∞—Ç–∞"))

st.caption("–ú–æ–¥–µ–ª—å —É—á–∏—Ç—ã–≤–∞–µ—Ç –≤–ª–∏—è–Ω–∏–µ –±—é–¥–∂–µ—Ç–∞ –∏ —Å–µ–∑–æ–Ω–∞. –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π –ø—Ä–æ–≥–Ω–æ–∑.")
